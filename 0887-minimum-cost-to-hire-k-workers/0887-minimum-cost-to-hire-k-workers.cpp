class Solution {
    public: // code written by sunny
        double mincostToHireWorkers(vector<int>& quality, vector<int>& wage, int K) {
                vector<pair<int, int>> qws;
                        int N = quality.size();
                                
                                        for(int i = 0; i < N; i++){
                                                    qws.push_back(make_pair(quality[i], wage[i]));
                                                            }
                                                                    
                                                                            //sort by wage/quality ratio, ascending
                                                                                    sort(qws.begin(), qws.end(), 
                                                                                                [](const pair<int, int>& p1, const pair<int, int>& p2){
                                                                                                                return (double)p1.second/p1.first < (double)p2.second/p2.first;
                                                                                                                            });
                                                                                                                                    
                                                                                                                                            // for(int i = 0; i < N; i++){
                                                                                                                                                    //     cout << qws[i].first << " " << qws[i].second << " " << (double)qws[i].second/qws[i].first << endl;
                                                                                                                                                            // }
                                                                                                                                                                    
                                                                                                                                                                            //multiply the sum of quality with current wage/quality ratio
                                                                                                                                                                                    double ans = DBL_MAX;
                                                                                                                                                                                            double wqRatio;
                                                                                                                                                                                                    vector<int> qualities;
                                                                                                                                                                                                            
                                                                                                                                                                                                                    for(int i = 0; i < N; i++){
                                                                                                                                                                                                                                pair<int, int> p = qws[i];
                                                                                                                                                                                                                                            int q = p.first, w = p.second;
                                                                                                                                                                                                                                                        // cout << q << " " << w << endl;
                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                //insert to right place so that we can access K smallest q(until now) quickly
                                                                                                                                                                                                                                                                                            auto it = upper_bound(qualities.begin(), qualities.end(), q);
                                                                                                                                                                                                                                                                                                        if(it == qualities.end()){
                                                                                                                                                                                                                                                                                                                        qualities.push_back(q);
                                                                                                                                                                                                                                                                                                                                    }else{
                                                                                                                                                                                                                                                                                                                                                    qualities.insert(it, q);
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                        wqRatio = (double)w/q;
                                                                                                                                                                                                                                                                                                                                                                                                    // cout << "wqRatio: " << wqRatio << endl;
                                                                                                                                                                                                                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                                                                                                                                                                            if(i+1 >= K){
                                                                                                                                                                                                                                                                                                                                                                                                                                            int qualitySum = accumulate(qualities.begin(), qualities.begin() + K, 0);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            ans = min(ans, qualitySum * wqRatio);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            return ans;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                };

        
